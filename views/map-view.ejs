<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Home Page</title>

    <link rel="stylesheet" href="/vendor/normalize-4.1.1.css" type="text/css" />
    <link rel="stylesheet" href="/vendor/border-box.css" type="text/css" />
    <link rel="stylesheet" href="/styles/map-view-layout.css" type="text/css" />

    <!-- Imports Leaflet Stylesheet -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.4/dist/leaflet.css"
   integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA=="
   crossorigin=""/>

   <!-- Imports Leaflet JS -->
   <!-- THIS MUST BE PLACED BEFORE APP.JS AND AFTER THE LEAFLET STYLESHEET -->
    <script src="https://unpkg.com/leaflet@1.3.4/dist/leaflet.js"
   integrity="sha512-nMMmRyTVoLYqjP9hrbed9S+FzjZHW5gY1TWCHA5ckwXZBadntCNs8kEqAWdrb9O7rxbCaA4lKTIWjDXZxflOcA=="
   crossorigin=""></script>

    <script type="text/javascript" src="/vendor/jquery-3.0.0.js"></script>
  </head>

  <body>
    <nav id="nav-bar">
      <span class="header"></span>
      <div class="main">
        <button type="button">Main Page</button>
      </div>
      <div class="">
        <button type="button">NEW MAP</button>
        <button class="rezoom" type="button">Check array!</button>
        <button class="showmap" type="button">Show the map object!</button>
      </div>
    </nav>

    <div id="mapid">
    <script>

      var myMap = L.map('mapid').setView([51.505, -0.09], 13);
      var markers = new L.FeatureGroup();

      function printAllInObject (object) {
        for( var thing in object) {
          console.log(thing);
        }
      }

      // Refocus the map based on the marker group bounds
      // This will mock when a new page is rendered to restrict the zoom if desired
      $(".rezoom").on('click', function () {
        myMap.eachLayer(function(layer){
          if (layer.options.title === 'marker') {
          markers.addLayer(layer);
          console.log("Leaflet id: " + layer._leaflet_id);
          console.log("Latlng: " + layer.getLatLng());
          console.log("Popup content: " + layer._popup._content);
          }
        });
        var newBounds = markers.getBounds();
        myMap.fitBounds(newBounds, {padding: [10,10]});
        myMap.setMaxBounds(newBounds);
        var currentZoom = myMap.getZoom();
        myMap.setMinZoom(currentZoom - 1);
      });

      // Debug: print some details on the map object
      $(".showmap").on('click', function () {
        console.log("Center: " + myMap.getCenter());
        console.log("Zoom: " + myMap.getZoom());
        console.log("Bounds: " + myMap.getBounds());
      });

      //Remove a marker
      $("body").on("click", ".delete", function() {
        var markerToDeleteID = parseInt($(this).attr('id'), 10);
        myMap.eachLayer(function (layer) {
          if (layer.options.title === 'marker' && layer._leaflet_id === markerToDeleteID) {
              myMap.removeLayer(layer);
              markers.removeLayer(layer);
          }
        });
      });

      L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}',
      {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
        maxZoom: 18,
        id: 'mapbox.streets',
        accessToken: 'pk.eyJ1IjoibG91aXNyaWVobCIsImEiOiJjam5kZjFzMTgyNjRqM3FvZXl4Y3ZyMXNuIn0.yLWkT311ioY116MNtVmy0A'
      }).addTo(myMap);

      // Create a marker on map click
      function onMapClick(event) {
        var coords = event.latlng;
        var newMarker = L.marker(coords, {title: 'marker', riseOnHover: true, draggable: true}).addTo(myMap);
        var bounds = new L.latLngBounds();
        newMarker
          .bindPopup("<p><b>Check out this new marker!</b><br>It's coords are: " + coords + "!</p>" +
            '<p>My id: ' + newMarker._leaflet_id + '</p>' +
            '<br><button type="button" class="delete" id="' + newMarker._leaflet_id + '">Delete</button>')
          .openPopup();
        newMarker.on('dragend', function(event){
            var updateMarker = event.target;
            var updateCoords = updateMarker.getLatLng();
            updateMarker.setLatLng(updateCoords,{riseOnHover:true, draggable:true}).bindPopup("<p><b>Check out this new marker!</b><br>It's coords are: " + updateCoords + "!</p>").update().openPopup();
          });
      }

      myMap.on('click', onMapClick);
    </script>
  </div>
  </body>
</html>
